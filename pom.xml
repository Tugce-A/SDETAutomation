<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>SDETAutomation</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>22</maven.compiler.source>
        <maven.compiler.target>22</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>4.27.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.11.4</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>5.11.4</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.testng/testng -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.10.2</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.github.javafaker/javafaker -->
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.4.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.4.0</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.18.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.github.qsy7.java.modules.browser.modules/ashot -->
        <dependency>
            <groupId>io.github.qsy7.java.modules.browser.modules</groupId>
            <artifactId>ashot</artifactId>
            <version>0.3.3</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.github.stephenc.monte/monte-screen-recorder -->
        <dependency>
            <groupId>com.github.stephenc.monte</groupId>
            <artifactId>monte-screen-recorder</artifactId>
            <version>0.7.7.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>7.20.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>7.20.1</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-testng -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>7.20.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.masterthought/maven-cucumber-reporting -->
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <version>5.8.5</version>
        </dependency>
        <dependency>
            <groupId>tech.grasshopper</groupId>
            <artifactId>extentreports-cucumber7-adapter</artifactId>
            <version>1.8.4</version>
        </dependency>
        

    </dependencies>

    <build>
        <plugins>
            <!-- Plugin for executing integration tests in parallel using Maven Failsafe Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <!-- If a test scenario fails, Maven will continue executing the remaining tests instead of stopping. -->

                    <skipTests>false</skipTests>
                    <!-- Ensures that tests are not skipped during the build process. -->

                    <includes>
                        <include>**/lesson20/runner/*ParallelRunner*.java</include>
                        <!-- Specifies the location of test runner files to include in the execution.
                             This path should point to the correct runner classes. Verify this path
                             to ensure that the desired test classes are included. -->
                    </includes>
                </configuration>
            </plugin>

            <!-- Plugin for executing unit tests in parallel using Maven Surefire Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <parallel>methods</parallel>
                    <!-- Specifies that test methods will be executed in parallel. Each test method will run concurrently,
                         making the test execution faster. -->
                    <rerunFailingTestsCount>1</rerunFailingTestsCount>
                    <threadCount>2</threadCount>
                    <!-- The number of threads to be used for parallel execution. In this case, two browsers or test methods
                         will run concurrently. -->

                    <perCoreThreadCount>false</perCoreThreadCount>
                    <!-- Disables the default behavior of assigning threads based on the number of CPU cores.
                         Instead, the specified thread count (2) will be used. -->

                    <forkCount>2</forkCount>
                    <!-- Starts two separate processes, each capable of running a different test package.
                         This can help speed up test execution but may increase resource consumption. -->

                    <reuseForks>true</reuseForks>
                    <!-- Reuses the processes created during previous test executions to reduce startup overhead
                         and improve test execution performance. -->

                    <argLine>-Duser.language=en</argLine>
                    <!-- Sets the user language to English during the test execution, ensuring consistency across different environments. -->

                    <argLine>-Dfile.encoding=UTF-8</argLine>
                    <!-- Sets the file encoding to UTF-8, preventing encoding issues during the test execution. -->

                    <includes>
                        <include>**/lesson20/runner/*ParallelRunner*.java</include>
                        <!-- Specifies the location of test runner files to include in the execution.
                             This path should point to the runner classes containing parallel test executions. -->
                    </includes>

                    <testFailureIgnore>true</testFailureIgnore>
                    <!-- Allows the build to continue even if some tests fail. All tests will be executed before the process ends. -->
                </configuration>
            </plugin>
        </plugins>
    </build>



</project>